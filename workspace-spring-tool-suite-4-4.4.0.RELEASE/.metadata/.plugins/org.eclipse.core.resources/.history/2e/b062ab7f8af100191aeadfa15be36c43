package com.amdocs;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;

import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;

@RestController
public class BookStoreRestController {

	private List<Book> listOfBooks;
	
	public BookStoreRestController() {
		listOfBooks = new ArrayList<Book>();
		listOfBooks.add(new Book("Clean Code","Robert Martin",33.0));
	}

	@HystrixCommand(fallbackMethod="getLocalCalatalogue")
	@GetMapping("/bookCatalogue")
	public List<Book> getBookCatalogue(){
		RestTemplate restTemplate = new RestTemplate();
		//This is the rest endpoint of the dependent microservice
		//This microservice doesn't exist right now. We need to create this
		//We are trying to see how this current 
		URI url = URI.create("http://localhost:8085/books");
		
		ParameterizedTypeReference<ArrayList<Book>> reference
        = new ParameterizedTypeReference<ArrayList<Book>>() { };

        ResponseEntity<ArrayList<Book>> response
                = restTemplate.exchange(url, HttpMethod.GET, null,reference);

        return response.getBody();

	}
	
	public List<Book> getLocalCatalogue(){
		return listOfBooks;
	}
	
}
